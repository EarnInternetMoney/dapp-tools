#!/bin/sh

# Based on the Nix install script
# This script installs Nix, Cachix and Dapptools

{ # Prevent execution if this script was only partially downloaded

  set -e

  oops() {
    echo >&2 "${0##*/}: error:" "$@"
    exit 1
  }

  if [ "$(id -u)" -eq 0 ]; then
    oops 'please run this script as a regular user'
  fi

  if [ "$(uname -s)" = Darwin ]; then
    oops 'this script only works on Linux (for now)'
  fi

  if [ -z "$HOME" ]; then
    oops "\$HOME is not set"
  fi

  have() { command -v "$1" >/dev/null; }

  { have nix; } || {
    echo "Installing Nix..."
    curl -sS https://nixos.org/nix/install | sh

    # shellcheck source=/dev/null
    . "$HOME/.nix-profile/etc/profile.d/nix.sh"
  }

  echo "Installing Cachix..."
  nix-env -if https://github.com/cachix/cachix/tarball/master --substituters https://cachix.cachix.org --trusted-public-keys cachix.cachix.org-1:eWNHQldwUO7G2VkjpnjDbWwy4KQ/HNxht7H4SSoMckM=
  
  echo "Use dapp cache..."
  cachix use dapp
  
  dest="$HOME/.dapp/"

  if [ ! -d "$dest/dapptools" ]; then
    echo "Downloading dapptools..."
    mkdir -p "$dest"
    cd "$dest"
    git clone https://github.com/dapphub/dapptools --recursive --quiet
  fi

  cd "$dest/dapptools" || {
    oops "could not download dapptools!"
  }

  git pull --quiet

  nix-env -Q -f . -iA dapp seth hevm ethsign

  cat >&2 <<EOF

Installation finished!  To ensure that the necessary environment
variables are set, either log in again, or type

  . "$HOME/.nix-profile/etc/profile.d/nix.sh"

in your shell.

You now have access to dapp seth hevm ethsign
EOF

} # End of wrapping
